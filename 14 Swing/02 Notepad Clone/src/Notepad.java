
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ÖMERFARUKGÜLHAN
 */
public class Notepad extends javax.swing.JFrame {

    /**
     * Creates new form Notepad
     */
    public Notepad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tf_text_area = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mni_open_file = new javax.swing.JMenuItem();
        mni_save_file = new javax.swing.JMenuItem();
        mni_exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        mni_change_color = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        mni_font_arial = new javax.swing.JMenuItem();
        mni_font_times = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tf_text_area.setColumns(20);
        tf_text_area.setRows(5);
        jScrollPane1.setViewportView(tf_text_area);

        jMenu1.setText("File");

        mni_open_file.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mni_open_file.setText("Open File");
        mni_open_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_open_fileActionPerformed(evt);
            }
        });
        jMenu1.add(mni_open_file);

        mni_save_file.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mni_save_file.setText("Save File");
        mni_save_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_save_fileActionPerformed(evt);
            }
        });
        jMenu1.add(mni_save_file);

        mni_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mni_exit.setText("Exit");
        mni_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_exitActionPerformed(evt);
            }
        });
        jMenu1.add(mni_exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenu3.setText("Color");

        mni_change_color.setText("Change Color");
        mni_change_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_change_colorActionPerformed(evt);
            }
        });
        jMenu3.add(mni_change_color);

        jMenu2.add(jMenu3);

        jMenu4.setText("Text Font");

        mni_font_arial.setText("Arial");
        mni_font_arial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_font_arialActionPerformed(evt);
            }
        });
        jMenu4.add(mni_font_arial);

        mni_font_times.setText("Times New Roman");
        mni_font_times.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_font_timesActionPerformed(evt);
            }
        });
        jMenu4.add(mni_font_times);

        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mni_open_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_open_fileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int i = fileChooser.showOpenDialog(this);

        if (i == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try (Scanner scanner = new Scanner(new BufferedReader(new FileReader(file)))) {
                String context = "";
                while (scanner.hasNextLine()) {
                    context += scanner.nextLine() + "\n";

                }
                tf_text_area.setText(context);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mni_open_fileActionPerformed

    private void mni_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mni_exitActionPerformed

    private void mni_font_arialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_font_arialActionPerformed
        Font font = new Font("Arial", Font.PLAIN, 20);

        tf_text_area.setFont(font);
    }//GEN-LAST:event_mni_font_arialActionPerformed

    private void mni_save_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_save_fileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int answer = fileChooser.showSaveDialog(this);

        if (answer == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getPath();

            try (FileWriter writer = new FileWriter(filePath)) {
                writer.write(tf_text_area.getText());
            } catch (IOException ex) {
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mni_save_fileActionPerformed

    private void mni_change_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_change_colorActionPerformed
        Color color = JColorChooser.showDialog(this, "Choose Color", Color.BLACK);

        tf_text_area.setForeground(color);
    }//GEN-LAST:event_mni_change_colorActionPerformed

    private void mni_font_timesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_font_timesActionPerformed
        Font font = new Font("Times New Roman", Font.PLAIN, 20);

        tf_text_area.setFont(font);
    }//GEN-LAST:event_mni_font_timesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notepad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mni_change_color;
    private javax.swing.JMenuItem mni_exit;
    private javax.swing.JMenuItem mni_font_arial;
    private javax.swing.JMenuItem mni_font_times;
    private javax.swing.JMenuItem mni_open_file;
    private javax.swing.JMenuItem mni_save_file;
    private javax.swing.JTextArea tf_text_area;
    // End of variables declaration//GEN-END:variables
}
